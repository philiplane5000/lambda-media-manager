AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Media Manager Handler
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  SharedMediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cosmic-media-vault
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  MediaManagerLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: media-manager-layer
      Description: Dependencies for Media Manager Function
      ContentUri: dependencies/
      CompatibleRuntimes:
        - nodejs22.x

  MediaManagerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/handlers/
      Handler: index.default
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Layers:
        - !Ref MediaManagerLayer
      Environment:
        Variables:
          TARGET_BUCKET_NAME: !Ref SharedMediaBucket
      Events:
        ListMedia:
          Type: Api
          Properties:
            Path: /media
            Method: get
            RequestParameters:
              - method.request.querystring.prefix:
                  Required: false
                  Caching: true
              - method.request.querystring.limit:
                  Required: false
                  Caching: true
        Media:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /media/{key}
            Method: get
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref SharedMediaBucket

Outputs:
  MediaManagerApi:
    Description: 'API Gateway endpoint URL for Prod stage for Media Manager function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/presigned/'
  MediaManagerFunction:
    Description: 'Media Manager Lambda Function ARN'
    Value: !GetAtt MediaManagerFunction.Arn
  MediaManagerFunctionIamRole:
    Description: 'Implicit IAM Role created for Media Manager function'
    Value: !GetAtt MediaManagerFunctionRole.Arn
  SharedMediaBucketName:
    Description: 'Name of the created S3 bucket'
    Value: !Ref SharedMediaBucket
  MediaManagerLayer:
    Description: 'Layer/dependencies for Media Manager Function'
    Value: !Ref MediaManagerLayer
